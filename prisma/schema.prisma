generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String
  role          String?
  banned        Boolean?
  banReason     String?
  banExpires    DateTime?
  emailVerified Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  sessions      Session[]
  accounts      Account[]
}

model Session {
  id                   String   @id @default(uuid())
  userId               String
  token                String
  expiresAt            DateTime
  ipAddress            String
  userAgent            String
  impersonatedBy       String?
  activeOrganizationId String?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  user                 User     @relation(fields: [userId], references: [id])
}

model Account {
  id                    String    @id @default(uuid())
  userId                String
  accountId             String
  providerId            String
  accessToken           String?
  refreshToken          String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  idToken               String?
  password              String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  user                  User      @relation(fields: [userId], references: [id])
}

model Verification {
  id         String   @id @default(uuid())
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Organization {
  id        String   @id @default(uuid())
  name      String
  slug      String
  logo      String?
  metadata  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Member {
  id             String   @id @default(uuid())
  userId         String
  organizationId String
  teamId         String?
  role           String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Invitation {
  id             String   @id @default(uuid())
  email          String
  inviterId      String
  organizationId String
  role           String
  teamId         String?
  status         String
  expiresAt      DateTime
  createdAt      DateTime @default(now())
}

model Team {
  id             String    @id @default(uuid())
  name           String
  organizationId String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt
}

